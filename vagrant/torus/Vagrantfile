# -*- mode: ruby -*-
# vi: set ft=ruby :

$script = <<SCRIPT
export PATH=$PATH:$GOPATH/bin
export GOPATH=$HOME/work

cat <<EOF >/home/vagrant/.bash_profile
# .bash_profile

# Get the aliases and functions
if [ -f ~/.bashrc ]; then
	. ~/.bashrc
fi

# User specific environment and startup programs

PATH=$PATH:$HOME/bin
export PATH

export PATH=$PATH:$GOPATH/bin
export GOPATH=$HOME/work
export GOBIN=$GOPATH/bin

alias cdtorus="cd $GOPATH/src/github.com/coreos/torus"
EOF

#sudo yum -y update
sudo yum install -y unzip curl wget vim-minimal golang git make docker rkt systemd-container nbd.x86_64 strace lsof psmisc kernel-modules kernel-modules-extra aoetools perf

# Build and install tours
git clone https://github.com/nak3/torus.git $GOPATH/src/github.com/coreos/torus
cd $GOPATH/src/github.com/coreos/torus
make
./bin/torusctl config -C 192.168.121.1:2379
sudo ./bin/torusctl config -C 192.168.121.1:2379

./bin/torusctl completion >  /tmp/torusctl
./bin/torusblk completion >  /tmp/torusblk
./bin/torusd --completion >  /tmp/torusd
sudo cp /tmp/torusctl /usr/share/bash-completion/completions/torusctl
sudo cp /tmp/torusblk /usr/share/bash-completion/completions/torusblk
sudo cp /tmp/torusd /usr/share/bash-completion/completions/torusd

#sudo usermod -d $GOPATH/src/github.com/coreos/torus vagrant

#mkdir -p ~/.vim/bundle
#git clone git://github.com/Shougo/neobundle.vim ~/.vim/bundle/neobundle.vim


# end
SCRIPT

$script_root = <<SCRIPT_ROOT
cat <<EOF >/etc/modules-load.d/nbd.conf
nbd
EOF
cat <<EOF >/etc/modules-load.d/aoe.conf
aoe
EOF
cat <<EOF >/etc/modules-load.d/target_core_user.conf
target_core_user
EOF

systemctl restart systemd-modules-load
systemctl enable systemd-modules-load

IPADDR=`hostname -I | cut -f1 -d' '`
HOSTNAME=`hostname -f`
echo "${IPADDR}	${HOSTNAME}" >> /etc/hosts

yum -y erase vim-minimal
yum -y install sudo vim-enhanced
# end
SCRIPT_ROOT

Vagrant.configure(2) do |config|
  config.vm.box = "fedora/25-cloud-base"
  config.vm.provision "shell", inline: $script, privileged: false
  config.vm.provision "shell", inline: $script_root, privileged: true
  config.vm.provision "docker" # Just install it

  config.vm.provision "file", source: "~/.gitconfig", destination: ".gitconfig"
#  config.vm.provision "file", source: "~/.vimrc", destination: ".vimrc"
#  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: ".ssh/authorized_keys"

  # Increase memory for Parallels Desktop
  config.vm.provider "parallels" do |p, o|
    p.memory = "4096"
  end

  config.vm.provider "libvirt" do |libvirt|
    libvirt.driver = "kvm"
    libvirt.memory = 4096
    #libvirt.cpus = 4
  end

  # Increase memory for Virtualbox
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "4096"
  end

  # Increase memory for VMware
  ["vmware_fusion", "vmware_workstation"].each do |p|
    config.vm.provider p do |v|
      v.vmx["memsize"] = "4096"
    end
  end

  config.vm.define :torus1 do | torus1 |
    config.vm.hostname = "torus1"
  end
  config.vm.define :torus2 do | torus2 |
    config.vm.hostname = "torus2"
  end
  config.vm.define :torus3 do | torus3 |
    config.vm.hostname = "torus3"
    torus3.vm.provision :shell, :path => "kubernetes.sh"
  end
end
